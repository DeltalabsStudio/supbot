dd/mm/yy

11/10/2018:
	Schedule and ScheduleTask rework:
		Schedule:
			removed reScheduleDeltaTime
			removed nextSchedule()
			
		ScheduleTask:
			added SchduleTask.getNextDate()
				Schedule for next task
			
			changed from abstract class to interface
				there was no need for ScheduleTask to be an abstract class
				so to simplify things, it was changed to interface
			
		Created ScheduleCC and Removed ScheduleCreateCC and ScheduleDBDeleteCC:
			SchdueleCC includes commands to create, delete, show schedules
			hence keeping different ConsoleCommands was not needed so it was removed
		
		Created ReScheduler:
			Helper Fucntion Class to reSchedule task easily
	
	ScheduleManager.notifyUpdate name changed to ScheduleManager.notifyDBUpdate
		notifyUpdate did not give the correct intuition of what the method did so its name was changed
	
	

10/10/2018:
	Created HelpCC:
		shows the available console commands and how to use them
		
	Added getHelper() Method to all ConsoleCommands
	
	Added static DateFormat in Schedule Class:
		All the Schedule code uses the same date format,
		so in order to keep it constant DataFormat was added
		
	

03/07/2018:
	Created VersionCC:
		shows version of supbot api
		
	Updated XPath:
		bubbleToAuthurName

18/08/18:

	XPath:
		updated xpath for bubble to author name
		
	SendMessageAction:
		added way to tag people with phonenumber regex
		
	ConsoleCommand:
		added way to send arguments with space using qoutes
		
	Schedule:
		made nextSchedule() method public
		
	RemoteActionCall:
		Changed name of RemoteActionCall to StringActionInitializer
		
	ScheduleManager:
		made notifyUpdate public
		
	Created ScheduleTaskInitializer:
		Helps convert arguments (array of strings) into ScheduleTask object
		
	Created ScheduleCreateCC:
		Initialize schedule using Console Command
		
	Created ScheduleDBDeleteCC:
		Delete Schedule from database
		
	Bug fixed ScheduleDatabase.UpdateSchedule:
		blob in ScheduleDatase gets currupted when UpdateSchedule was used
		cause: object name was being saved instead of bytes of serialized object
		fix: serialized schedule object then stored in the blob as bytes
		

05/08/18:

	XPaths:
		Changed input text xpath
		Updated XPaths.newChatGroup to ignore other icons (like mute) which are next to new message icon
		
	Bubble:
		Added exception handling when bubble doesnt contain any text (like emojies)

16/07/18:
	Fixed Bugs:
		bot taps the wrong chat if it shifts up or down due to new messages in other group
			cause: the webview of chatgroup list item was cached which swapped when a listitem shifts up and down to different group during execution
			fix: find the webview everytime it is needed (removed cached webview for chatgroup listitem)
			
		CheckerThread crashes when a group without ";;" gets a message
			cause: group title name was split by ";;" and the 2nd item in the array is checked as the groupid, if the group doesnt have ";;" it would give IndexOutOfBoundExeption
			fix: check if the list after splitting have more than 2 elements, before using the 2nd item to search for groupid

29/4/18:
	Created Scheduler system
		Scheduler system enables the bot to schedule tasks at a perticular time and date.
		
		ScheduleTask
			Contians task to be exected at time.
		Schedule
			Object that contains task to be called and time to be scheduled,
		ScheduleManager
			Manages Schedules
			use Bot.getScheduleManager().add() to add Schedule to the Bot
	
	Created NetworkJob system
		NetworkJob allows the bot to call remote services.
		
		NetworkJob
			creates a Request strings that is sent to the service
			and handles the Response strings that comes from the service
		NetworkJobManager
			manages NetworkJob
			creates id for the job that is created, and sends the request to the service,
			waits for the service's response
	
	moved Math feature from the core project to example

25/4/18:
    Created RemoteActionCall
		RemoteActionCall enables the bot to recognize and create Action object from string,
		The limitation of which being that all the parameters of Action to be created should have parameters only of type
		String, Integer, Float, or Boolean, if its not it should have a static method: Object castFromString(String s);
		which the RemoteActionCall uses to convert a string query to parameters object.
		
	Created ActionCallerCC (Console Command)
		ActionCallerCC is used to call Action from the console, 
		command must be of format: action ActionClassName param1 param2 paramN
		to add an action to ActionCallerCC, the class of the target Action should be added into RemoteActionCall
		
	Created CheckerCallerCC (Console Command)
		CheckerCallerCC is used to add Action into Checker.
		command must be of format: checker ActionClassName param1 param2 paramN removeCheckerOnSuccess timeIntMs
		where removeCheckerOnSuccess is of value true/false, when it is true, the action is removed from the checker if it is successful
	
    Fixed Bug(s):
        processes old chat  when visiting new groups without CheckInNewGroupAction
            cause: gotoGroup() method in ActionManager doesn't reset the chat of the group
            fix: removed ActionTaskFunctions.resetAndPutChatInGroupChat() call from CheckInNewGroupAction and added it
                 into gotoGroup() method in ActionManager

18/4/18:
    Created Bubble
        abstraction of selenium webelement of whatsapp chat

    Created ChatProcessor and ChatProcessorManager
        ChatProcessor processes the bubble of chat sent by a client and perform appropriate actions
        ChatProcessorManager manages a list of ChatProcessors and executes them when process() method is called
        To add ChatProcessor in ChatProcessorManager, Bot.getChatProcessorManager.add() can be used
        ChatProcessor can be ran in multithread for optimization. (configured in ChatProcessor constructor)

    Created CommandCP
        Code from ActionTaskFunction.processBubbleThenProcessCommand is moved to CommandCP as ChatProcessor Abstraction

    Deprecated BubbleFunctions
        Use Bubble class instead of BubbleFunctions

16/4/18:
    Created Database and DatabaseManager
        to control the version of the tables in mysqlite

    Created Configuration
        save and retrieve name value pair which is saved on disk

    Fixed Bug(s):
        exception in ClientDatabase.getClient when client is not found in database
            cause: trying to use result set even though its not pointing to anything
            solution: return null client when result set is'nt point before first, before using the result set

        CheckInNewGroupAction is called even though message comes in current group
            cause: xpath was set to detect just the new message sign (the (1) sign) in the chat list
            solution: updated newChatGroup XPath

    Optimization(s):
        In ActionTaskFunctions Class in resetAndPutChatInGroupChat function:
            instead of queering database to get correct client, just use a temp client.

    Initialization in Looper
        Initialization of different components of bot is done after the init() method in looper
        to add more initialization, ExtraLooperFunctions.moreInits can be used in while creating Looper object in main


7/4/18:
    Log even if debug is off
        Log error
        Log reply

    Added Run Console Command
        way to run bot command from console
        run <gid> <cmd> <args>

    Fixed Bug(s):
        exception in ClientDatabase.getClient when name is null
            cause: BubbleFunction.getAuthorNameFromBubble returns null for the bubble who doesn't have author in top
            solution: when Client.getClient is called with name = null, return a temp client instead of searching in database

    added comments to core actions


6/4/18:
    Added Console Logging system
    Removed all Bot manager parameters and replaced it with Bot class with static methods to get managers

    Added log console command
        turn on logging: log on
        turn off logging: log off

    Added group console command
        show group: group show
        add group: group add <gid>
        remove group: group remove <gid>